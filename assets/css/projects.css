.projects__wrapper {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.prev-arrow,
.next-arrow {
  width: 50px;
  transition: all 0.5s ease-in-out;
  cursor: pointer;
}

.next-arrow {
  margin-left: 25px;
}

.prev-arrow {
  margin-right: 25px;
}

.prev-arrow:hover,
.next-arrow:hover {
  transform: scale(1.1);
  filter: drop-shadow(0 0 10px #fff);
}

.projects__container {
  box-sizing: border-box;
  background: linear-gradient(#333, #222);
  box-shadow: inset 0 0 10px #000;
  border-radius: 30px;
  width: 90%;
  height: 100%;
  min-height: 80vh;
  overflow: hidden;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(3, 1fr);
  position: relative;
  /* Optimizaci√≥n para hardware acceleration */
  will-change: transform;
  -webkit-perspective: 1000;
  -webkit-backface-visibility: hidden;
}

/* Estilos base de los grupos de proyectos */
.project-group {
  position: absolute;
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(3, 1fr);
  will-change: transform;
  -webkit-perspective: 1000;
  -webkit-backface-visibility: hidden;
  transform-style: preserve-3d;
}

.project-group.active {
  transform: translateX(0);
  z-index: 2;
}

.project-group.next {
  transform: translateX(100%);
  z-index: 1;
}

.project-group.prev {
  transform: translateX(-100%);
  z-index: 1;
}

.project-group.slide-from-left {
  animation: slideFromLeft 0.6s cubic-bezier(0.25, 0.1, 0.25, 1) forwards;
}

.project-group.slide-to-right {
  animation: slideToRight 0.6s cubic-bezier(0.25, 0.1, 0.25, 1) forwards;
}

.project-group.slide-from-right {
  animation: slideFromRight 0.6s cubic-bezier(0.25, 0.1, 0.25, 1) forwards;
}

.project-group.slide-to-left {
  animation: slideToLeft 0.6s cubic-bezier(0.25, 0.1, 0.25, 1) forwards;
}

.project-item {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  border-radius: 5px;
  transition: all 0.3s ease-in-out;
  font-weight: bold;
  cursor: pointer;
}

.project-item:hover {
  box-shadow: inset 0 0 50px #000;
  z-index: 1;
}

/* Media queries sin cambios */
@media screen and (max-width: 1035px) {
  .projects__container {
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(4, 1fr);
    min-height: 100vh;
  }
  .project-group {
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(4, 1fr);
  }

  .project-item {
    transition: all 0.1s ease-in-out;
  }

  .project-item:hover {
    box-shadow: none;
    z-index: 1;
  }
  .project-item:active {
    box-shadow: inset 0 0 50px #000;
    z-index: 1;
  }

  .prev-arrow:hover,
  .next-arrow:hover {
    transform: none;
    filter: none;
  }

  .prev-arrow:active,
  .next-arrow:active {
    transform: scale(1.1);
    filter: drop-shadow(0 0 10px #fff);
  }
}

@media screen and (max-width: 800px) {
  .projects__container {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(6, 1fr);
    min-height: 100vh;
  }
  .project-group {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(6, 1fr);
  }
  .prev-arrow,
  .next-arrow {
    display: block;
    width: 40px;
  }
}

@media screen and (max-width: 480px) {
  .projects__wrapper {
    justify-content: center;
  }

  .projects__container {
    grid-template-columns: repeat(1, 1fr);
    grid-template-rows: auto;
    min-height: auto;
    max-height: 75vh;
    overflow-y: auto;
    display: block;
  }

  .project-group {
    position: relative;
    display: block;
    transform: none !important;
    animation: none !important;
    z-index: 1 !important;
  }

  .project-group.active,
  .project-group.next,
  .project-group.prev {
    transform: none;
    z-index: 1;
  }

  .prev-arrow,
  .next-arrow {
    display: none;
  }

  .project-item {
    aspect-ratio: 1/1;
    margin-bottom: 10px;
  }
}

@keyframes slideFromLeft {
  from {
    transform: translate3d(-100%, 0, 0);
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes slideToRight {
  from {
    transform: translate3d(0, 0, 0);
  }
  to {
    transform: translate3d(100%, 0, 0);
  }
}

@keyframes slideFromRight {
  from {
    transform: translate3d(100%, 0, 0);
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes slideToLeft {
  from {
    transform: translate3d(0, 0, 0);
  }
  to {
    transform: translate3d(-100%, 0, 0);
  }
}
